{
    "$connections": {
        "value": {
            "outlook_1": {
                "connectionId": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Resource group name}/providers/Microsoft.Web/connections/outlook-1",
                "connectionName": "outlook-1",
                "id": "/subscriptions/{Your Azure Subscription ID}/providers/Microsoft.Web/locations/eastus/managedApis/outlook"
            },
            "servicebus": {
                "connectionId": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Resource group name}/providers/Microsoft.Web/connections/servicebus",
                "connectionName": "servicebus",
                "id": "/subscriptions/{Your Azure Subscription ID}/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
            },
            "servicebus_1": {
                "connectionId": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Resource group name}/providers/Microsoft.Web/connections/servicebus-1",
                "connectionName": "servicebus-1",
                "id": "/subscriptions/{Your Azure Subscription ID}/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
            }
        }
    },
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Condition": {
                "actions": {
                    "Condition_4": {
                        "actions": {
                            "Send_an_email": {
                                "inputs": {
                                    "body": {
                                        "Body": "Temperature of Sensor 4 is too low at @{body('Parse_JSON')?['temp4cv']}°C",
                                        "Subject": "WARNING",
                                        "To": "{Test Email Address}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['outlook_1']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/Mail"
                                },
                                "runAfter": {},
                                "type": "ApiConnection"
                            },
                            "Send_message": {
                                "inputs": {
                                    "body": {
                                        "ContentData": "@{base64(concat('Temperature of Sensor 4 is too low at ',body('Parse_JSON')?['temp4cv'],'°C'))}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/@{encodeURIComponent(encodeURIComponent('notifications'))}/messages",
                                    "queries": {
                                        "systemProperties": "None"
                                    }
                                },
                                "runAfter": {
                                    "Send_an_email": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            }
                        },
                        "else": {
                            "actions": {
                                "Condition_7": {
                                    "actions": {
                                        "Send_an_email_4": {
                                            "inputs": {
                                                "body": {
                                                    "Body": "Temperature of Sensor 4 is too high at @{body('Parse_JSON')?['temp4cv']}°C",
                                                    "Subject": "WARNING",
                                                    "To": "{Test Email Address}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['outlook_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Mail"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        },
                                        "Send_message_4": {
                                            "inputs": {
                                                "body": {
                                                    "ContentData": "@{base64(concat('Temperature of Sensor 4 is too high at ',body('Parse_JSON')?['temp4cv'],'°C'))}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/@{encodeURIComponent(encodeURIComponent('notifications'))}/messages",
                                                "queries": {
                                                    "systemProperties": "None"
                                                }
                                            },
                                            "runAfter": {
                                                "Send_an_email_4": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "expression": "@greaterOrEquals(body('Parse_JSON')?['temp4cv'], body('Parse_JSON_2')?['temp4ut'])",
                                    "runAfter": {},
                                    "type": "If"
                                }
                            }
                        },
                        "expression": "@lessOrEquals(body('Parse_JSON')?['temp4cv'], body('Parse_JSON_2')?['temp4lt'])",
                        "runAfter": {},
                        "type": "If"
                    }
                },
                "expression": "@not(equals(body('Parse_JSON')?['temp4cv'], -273))",
                "runAfter": {
                    "Parse_JSON_2": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Condition_2": {
                "actions": {
                    "Condition_5": {
                        "actions": {
                            "Send_an_email_2": {
                                "inputs": {
                                    "body": {
                                        "Body": "Temperature of Sensor 1 is too low at @{body('Parse_JSON')?['temp1cv']}°C",
                                        "Subject": "WARNING",
                                        "To": "{Enter Your Email Address}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['outlook_1']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/Mail"
                                },
                                "runAfter": {},
                                "type": "ApiConnection"
                            },
                            "Send_message_2": {
                                "inputs": {
                                    "body": {
                                        "ContentData": "@{base64(concat('Temperature of Sensor 1 is too low at ',body('Parse_JSON')?['temp1cv'],'°C'))}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/@{encodeURIComponent(encodeURIComponent('notifications'))}/messages",
                                    "queries": {
                                        "systemProperties": "None"
                                    }
                                },
                                "runAfter": {
                                    "Send_an_email_2": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            }
                        },
                        "else": {
                            "actions": {
                                "Condition_8": {
                                    "actions": {
                                        "Send_an_email_5": {
                                            "inputs": {
                                                "body": {
                                                    "Body": "Temperature of Sensor 1 is too high at @{body('Parse_JSON')?['temp1cv']}°C",
                                                    "Subject": "WARNING",
                                                    "To": "{Test Email Address}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['outlook_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Mail"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        },
                                        "Send_message_5": {
                                            "inputs": {
                                                "body": {
                                                    "ContentData": "@{base64(concat('Temperature of Sensor 1 is too high at ',body('Parse_JSON')?['temp1cv'],'°C'))}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/@{encodeURIComponent(encodeURIComponent('notifications'))}/messages",
                                                "queries": {
                                                    "systemProperties": "None"
                                                }
                                            },
                                            "runAfter": {
                                                "Send_an_email_5": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "expression": "@greaterOrEquals(body('Parse_JSON')?['temp1cv'], body('Parse_JSON_2')?['temp1ut'])",
                                    "runAfter": {},
                                    "type": "If"
                                }
                            }
                        },
                        "expression": "@lessOrEquals(body('Parse_JSON')?['temp1cv'], body('Parse_JSON_2')?['temp1lt'])",
                        "runAfter": {},
                        "type": "If"
                    }
                },
                "expression": "@not(equals(body('Parse_JSON')?['temp1cv'], -273))",
                "runAfter": {
                    "Parse_JSON_2": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Condition_3": {
                "actions": {
                    "Condition_6": {
                        "actions": {
                            "Send_an_email_3": {
                                "inputs": {
                                    "body": {
                                        "Body": "Current of Sensor 2 is too low at @{body('Parse_JSON')?['amps2cv']}A",
                                        "Subject": "WARNING",
                                        "To": "{Test Email Address}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['outlook_1']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/Mail"
                                },
                                "runAfter": {},
                                "type": "ApiConnection"
                            },
                            "Send_message_3": {
                                "inputs": {
                                    "body": {
                                        "ContentData": "@{base64(concat('Current of Sensor 2 is too low at ',body('Parse_JSON')?['amps2cv'],'A'))}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/@{encodeURIComponent(encodeURIComponent('notifications'))}/messages",
                                    "queries": {
                                        "systemProperties": "None"
                                    }
                                },
                                "runAfter": {
                                    "Send_an_email_3": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            }
                        },
                        "else": {
                            "actions": {
                                "Condition_9": {
                                    "actions": {
                                        "Send_an_email_6": {
                                            "inputs": {
                                                "body": {
                                                    "Body": "Current of Sensor 2 is too high at @{body('Parse_JSON')?['amps2cv']}A",
                                                    "Subject": "WARNING",
                                                    "To": "{Test Email Address}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['outlook_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/Mail"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        },
                                        "Send_message_6": {
                                            "inputs": {
                                                "body": {
                                                    "ContentData": "@{base64(concat('Current of Sensor 2 is too high at ',body('Parse_JSON')?['amps2cv'],'A'))}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/@{encodeURIComponent(encodeURIComponent('notifications'))}/messages",
                                                "queries": {
                                                    "systemProperties": "None"
                                                }
                                            },
                                            "runAfter": {
                                                "Send_an_email_6": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "expression": "@greaterOrEquals(body('Parse_JSON')?['amps2cv'], body('Parse_JSON_2')?['amps2ut'])",
                                    "runAfter": {},
                                    "type": "If"
                                }
                            }
                        },
                        "expression": "@lessOrEquals(body('Parse_JSON')?['amps2cv'], body('Parse_JSON_2')?['amps2lt'])",
                        "runAfter": {},
                        "type": "If"
                    }
                },
                "expression": "@not(equals(body('Parse_JSON')?['amps2cv'], -273))",
                "runAfter": {
                    "Parse_JSON_2": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "HttpTriggerCSharp1": {
                "inputs": {
                    "body": {
                        "body": "@{base64ToString(triggerBody()?['ContentData'])}"
                    },
                    "function": {
                        "id": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Resource group name}/providers/Microsoft.Web/sites/ParseStreamAnalytics/functions/HttpTriggerCSharp1"
                    }
                },
                "runAfter": {},
                "type": "Function"
            },
            "Parse_JSON": {
                "inputs": {
                    "content": "@body('HttpTriggerCSharp1')",
                    "schema": {
                        "properties": {
                            "amps2cv": {
                                "type": "number"
                            },
                            "temp1cv": {
                                "type": "number"
                            },
                            "temp4cv": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "HttpTriggerCSharp1": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Parse_JSON_2": {
                "inputs": {
                    "content": "@body('GetCachedKey')",
                    "schema": {
                        "properties": {
                            "amps2lt": {
                                "type": "number"
                            },
                            "amps2ut": {
                                "type": "number"
                            },
                            "temp1lt": {
                                "type": "number"
                            },
                            "temp1ut": {
                                "type": "number"
                            },
                            "temp4lt": {
                                "type": "number"
                            },
                            "temp4ut": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Until": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Until": {
                "actions": {
                    "Condition_10": {
                        "actions": {
                            "SetCacheKey": {
                                "inputs": {
                                    "body": {
                                        "SettingCache": "SetCache"
                                    },
                                    "function": {
                                        "id": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Resource group name}/providers/Microsoft.Web/sites/ParseStreamAnalytics/functions/SetCacheKey"
                                    }
                                },
                                "runAfter": {},
                                "type": "Function"
                            }
                        },
                        "expression": "@equals(body('GetCachedKey'), 'key not found')",
                        "runAfter": {
                            "GetCachedKey": [
                                "Succeeded"
                            ]
                        },
                        "type": "If"
                    },
                    "GetCachedKey": {
                        "inputs": {
                            "body": {
                                "payload": "payloadvalue"
                            },
                            "function": {
                                "id": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Resource group name}/providers/Microsoft.Web/sites/ParseStreamAnalytics/functions/GetCachedKey"
                            }
                        },
                        "runAfter": {},
                        "type": "Function"
                    }
                },
                "expression": "@not(equals(body('GetCachedKey'), 'key not found'))",
                "limit": {
                    "count": 60,
                    "timeout": "PT1H"
                },
                "runAfter": {
                    "Parse_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "Until"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "When_a_message_is_received_in_a_queue_(auto-complete)": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['servicebus']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/@{encodeURIComponent(encodeURIComponent('sensordata'))}/messages/head",
                    "queries": {
                        "queueType": "Main"
                    }
                },
                "recurrence": {
                    "frequency": "Second",
                    "interval": 30
                },
                "type": "ApiConnection"
            }
        }
    }
}