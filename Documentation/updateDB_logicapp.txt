{
    "$connections": {
        "value": {
            "servicebus": {
                "connectionId": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Your Resource Group}/providers/Microsoft.Web/connections/servicebus",
                "connectionName": "servicebus",
                "id": "/subscriptions/{Your Azure Subscription ID}/providers/Microsoft.Web/locations/eastus/managedApis/servicebus"
            },
            "sql": {
                "connectionId": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Your Resource Group}/providers/Microsoft.Web/connections/sql",
                "connectionName": "sql",
                "id": "/subscriptions/{Your Azure Subscription ID}/providers/Microsoft.Web/locations/eastus/managedApis/sql"
            }
        }
    },
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Condition": {
                "actions": {
                    "Update_row": {
                        "inputs": {
                            "body": {
                                "NodeID": 1,
                                "SensorType": 1,
                                "Value": "@body('Parse_JSON')?['temp1cv']"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                }
                            },
                            "method": "patch",
                            "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SensorTable]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "expression": "@not(equals(body('Parse_JSON')?['temp1cv'], -273))",
                "runAfter": {
                    "Condition_2": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Condition_2": {
                "actions": {
                    "Update_row_2": {
                        "inputs": {
                            "body": {
                                "NodeID": 1,
                                "SensorType": 2,
                                "Value": "@body('Parse_JSON')?['amps2cv']"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                }
                            },
                            "method": "patch",
                            "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SensorTable]'))}/items/@{encodeURIComponent(encodeURIComponent('2'))}"
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "expression": "@not(equals(body('Parse_JSON')?['amps2cv'], -273))",
                "runAfter": {
                    "Condition_3": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Condition_3": {
                "actions": {
                    "Update_row_3": {
                        "inputs": {
                            "body": {
                                "NodeID": 1,
                                "SensorType": 4,
                                "Value": "@body('Parse_JSON')?['temp4cv']"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                }
                            },
                            "method": "patch",
                            "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SensorTable]'))}/items/@{encodeURIComponent(encodeURIComponent('4'))}"
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "expression": "@not(equals(body('Parse_JSON')?['temp4cv'], -273))",
                "runAfter": {
                    "Parse_JSON": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "HttpTriggerCSharp1": {
                "inputs": {
                    "body": {
                        "body": "@{base64ToString(triggerBody()?['ContentData'])}"
                    },
                    "function": {
                        "id": "/subscriptions/{Your Azure Subscription ID}/resourceGroups/{Your Resource Group}/providers/Microsoft.Web/sites/ParseStreamAnalytics/functions/HttpTriggerCSharp1"
                    }
                },
                "runAfter": {},
                "type": "Function"
            },
            "Parse_JSON": {
                "inputs": {
                    "content": "@body('HttpTriggerCSharp1')",
                    "schema": {
                        "properties": {
                            "amps2cv": {
                                "type": "number"
                            },
                            "temp1cv": {
                                "type": "number"
                            },
                            "temp4cv": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "HttpTriggerCSharp1": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "When_a_message_is_received_in_a_queue_(auto-complete)": {
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['servicebus']['connectionId']"
                        }
                    },
                    "method": "get",
                    "path": "/@{encodeURIComponent(encodeURIComponent('sensordata'))}/messages/head",
                    "queries": {
                        "queueType": "Main"
                    }
                },
                "recurrence": {
                    "frequency": "Second",
                    "interval": 10
                },
                "type": "ApiConnection"
            }
        }
    }
}